name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore & Build app-dotnet
        run: |
          dotnet restore app-dotnet/app-dotnet.csproj
          dotnet build   app-dotnet/app-dotnet.csproj -c Release --no-restore

      - name: Restore & Build LocalRunner
        run: |
          dotnet restore app-lambda-dotnet/LocalRunner/LocalRunner.csproj
          dotnet build   app-lambda-dotnet/LocalRunner/LocalRunner.csproj -c Release --no-restore

      - name: Smoke test LocalRunner
        run: dotnet run --project app-lambda-dotnet/LocalRunner/LocalRunner.csproj

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (app-dotnet)
        run: docker build -t clo24-minapi:ci -f app-dotnet/Dockerfile app-dotnet

      - name: Validate docker-compose syntax
        run: docker compose -f app-dotnet/docker-compose.yml config -q

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt & validate
        working-directory: infra-docker
        run: |
          terraform init -backend=false
          terraform fmt -check
          terraform validate

      - name: Install SAM CLI
        run: pipx install aws-sam-cli || pip install --user aws-sam-cli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Validate SAM template
        run: sam validate -t infra-serverless/template.yaml --region eu-north-1
       
